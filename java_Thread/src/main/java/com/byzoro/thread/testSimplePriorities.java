package com.byzoro.thread;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;/** * @Describe TODO: 优先级的测试 * @author huanyuguo * @date 2018/5/21 9:50 */public class testSimplePriorities implements Runnable {    private int countDown = 5;    private volatile double d;  //No optimization    private int priority;    public testSimplePriorities(int priority) {        this.priority = priority;    }    @Override    public String toString() {        return Thread.currentThread() + ": " + countDown;    }    @Override    public void run() {        Thread.currentThread().setPriority(priority);        while (true) {            for (int i = 0; i < 100000; i++) {                d += (Math.PI + Math.E) / (double) i;                if (i % 1000 == 0) {                    Thread.yield();                }            }            System.out.println(this);            if (--countDown == 0)                return;        }    }    public static void main(String[] args) {        ExecutorService exec = Executors.newCachedThreadPool();        for (int i = 0; i < 5; i++)            exec.execute(new testSimplePriorities(Thread.MIN_PRIORITY));        exec.execute(new testSimplePriorities(Thread.MAX_PRIORITY));        exec.shutdown();    }}