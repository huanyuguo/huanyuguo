package com.byzoro;import java.io.*;import org.junit.Test;/** * @author huanyuguo * @date 2018/4/28 9:01 */public class java_io {    /**     * 判断文件是否存在，如果不存在，则创建新文件     */    @Test    public void isExist() throws IOException {        //TODO: 在JVM当前工作目录下创建一个File对象，即项目名所在路径        File file = new File("test.mp4");        //TODO: 判断文件是否存在        boolean flag = file.exists();        if (flag) {            System.out.println("文件存在。。。。。。");        } else {            file.createNewFile();            System.out.println("创建文件" + file.getName() + "成功");        }        //TODO: 获得JVM当前工作目录        String workingDir = System.getProperty("user.dir");        System.out.println(file.getAbsolutePath());        System.out.println(workingDir);    }    /**     * 视频截帧     */    @Test       //TODO:(只能传输文本文件)    public void cutVideo() {        try {            FileReader fileReader = new FileReader(new File("D:\\file\\ip.txt"));            FileWriter fileWriter = new FileWriter(new File("D:\\file\\ip111.txt"));            BufferedReader bufferedReader = new BufferedReader(fileReader);            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);            String readLine = bufferedReader.readLine();            int n = 0;            //TODO:传输部分文件            while (readLine != null) {                if (n > 10000) {                    break;                }                n++;                bufferedWriter.write(readLine);            }            bufferedReader.close();            bufferedWriter.close();        } catch (FileNotFoundException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        } finally {            System.out.println("传输完成。。。。。。");        }    }    private final static String INPUTPATH = "D:/video/zhuoyaoji.mp4";    private final static String OUTPATH = "D:/video/copyzhuoyaoji.mp4";    private final static String FFMPEGPATH = "D:/Plugin/ffmpeg/ffmpeg";    /**     * TODO:Java调用FFmpeg剪切视频     *     * ffmpeg -ss START -t DURATION -i INPUT -vcodec copy -acodec copy OUTPUT     * 对上面的命令稍做个解释。     * -ss 开始时间，如： 00:00:20，表示从20秒开始；     * -t 时长，如： 00:00:10，表示截取10秒长的视频；     * -i 输入，后面是空格，紧跟着就是输入视频文件；     * -vcodec copy 和 -acodec copy表示所要使用的视频和音频的编码格式，这里指定为copy表示原样拷贝；     * INPUT，输入视频文件；     * OUTPUT，输出视频文件；     */    @Test    public void convertVideo() {        Runtime runtime = Runtime.getRuntime();        String cut = FFMPEGPATH + " -ss 00:00:00 -t 60 -i " +INPUTPATH+" -c copy " + OUTPATH;        System.out.println(cut);        try {            runtime.exec(cut);        } catch (IOException e) {            e.printStackTrace();        }    }}